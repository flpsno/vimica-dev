function promptUserToRefresh(e){window.confirm("New version available! Refresh?")&&e.waiting.postMessage("skipWaiting")}function listenForWaitingServiceWorker(e){function r(){e.installing.addEventListener("statechange",function(){"installed"===this.state&&promptUserToRefresh(e)})}if(console.log("listenForWaitingServiceWorker",e),e){if(e.waiting)return promptUserToRefresh(e);e.installing&&r(),e.addEventListener("updatefound",r)}}self.addEventListener("install",e=>{self.skipWaiting()}),self.addEventListener("fetch",e=>{e.respondWith(caches.open("vimica").then(r=>r.match(e.request).then(t=>{const n=fetch(e.request).then(t=>(r.put(e.request,t.clone()),t));return t||n})))});const enableServiceWorker=!0,serviceWorkerAvailable="serviceWorker"in navigator;serviceWorkerAvailable?navigator.serviceWorker.register("/service-worker.js").then(e=>{console.log("Service worker registered",e),listenForWaitingServiceWorker(e)}):console.log("Service worker disabled - process.env.NODE_ENV",process.env.NODE_ENV);export let deferredPrompt;window.addEventListener("beforeinstallprompt",e=>{e.preventDefault(),deferredPrompt=e;try{showInstallPromotion()}catch(r){console.error("showInstallPromotion()",r)}}),window.addEventListener("appinstalled",e=>{console.log("a2hs installed")});